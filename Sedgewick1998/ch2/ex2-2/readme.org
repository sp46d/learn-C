* Exercise 2.2

How long does it take to count to 1 billion (ignoring overflow)? Determine the amount of time it takes the program

#+begin_src C
int i, j, k, count = 0;
for (i = 0; i < N; i++)
    for (j = 0; j < N; j++)
        for (k = 0; k < N; k++)
            count++;
#+end_src

to complete in your programming environment, for /N/ = 10, 100, and 1000. If your compiler has optimization features that are supposed to make programs more efficient, check whether or not they do so for this program.

** My answer

My code for this exercise is as below, or in a file [[file:ex2-2.c][ex2-2.c]].

#+begin_src C
#include <stdio.h>
#include <time.h>

int main(void)
{
    int i, j, k, count = 0;
    clock_t start_time, end_time;
    double cpu_time_used;

    start_time = clock();

    for (i = 0; i < N; i++)
        for (j = 0; j < N; j++)
            for (k = 0; k < N; k++)
                count++;

    end_time = clock();
    cpu_time_used = ((double)(end_time - start_time)) / CLOCKS_PER_SEC;
    printf("Counting to %d takes %g seconds.\n", count, cpu_time_used);

    return 0;
}
#+end_src

I provide the value of ~N~ when compiling the code, as its value is subject to change.

The results are:

- ~N = 10~: 4e-06 seconds
- ~N = 100~: 2.234e-03 seconds
- ~N = 1000~: 2.112 seconds
  
